name: CI

# The jobs below will execute any time a tag is pushed to any branch in the repo.
on: 
  push:
    tags:
      - '*'

env:
  IMAGE: rancher/system-upgrade-controller
  TAG: ${{ github.ref_name }}

jobs:
  # Run e2e tests and upload the artifact files that Dapper generates to GitHub 
  # Actions so we can reference them when we create the GitHub release.
  run-tests:
    runs-on: ubuntu-latest
    container: rancher/dapper:v0.6.0
    permissions:
      contents: read
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Add Git
        run: apk add -U git

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests
        id: run-tests
        run: |
          dapper ci
          dapper e2e-sonobuoy
          dapper e2e-verify

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "artifacts-${{ matrix.os }}-${{ matrix.arch }}"
          path: /dist/artifacts/*
          if-no-files-found: error
          overwrite: true

  # Create a GitHub release using artifacts from the `run-tests` job.
  create-gh-release:
    runs-on: ubuntu-latest
    needs: 
      - run-tests
    permissions:
      contents: write # needed for creating the GH release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        os: [linux]
        arch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: /dist/artifacts
          pattern: artifacts-*
          merge-multiple: true

      - name: Create GitHub release
        run: gh release create "${{ env.TAG }}" --prerelease --title "${{ env.TAG }}" /dist/artifacts/*

  # Build Docker images and push them to DockerHub.
  build-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      ARCH: ${{ matrix.arch }}
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: latest=false

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push controller image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: package/Dockerfile
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          labels: "${{ steps.meta.outputs.labels }}"
