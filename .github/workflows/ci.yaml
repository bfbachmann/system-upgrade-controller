name: CI

# The jobs below will execute any time a tag is pushed to any branch in the repo.
on: 
  push:
    branches:
      - 'master'
    tags:
      - '*'

env:
  IMAGE: brunobachmann499/system-upgrade-controller
  TAG: ${{ github.ref_name }}

jobs:
  # Run e2e tests and upload the artifact files that Dapper generates to GitHub 
  # Actions so we can reference them when we create the GitHub release.
  build-test:
    runs-on: ubuntu-latest
    container: rancher/dapper:v0.6.0
    permissions:
      contents: read
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Add Git
        run: apk add -U git

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables
        run: echo "DAPPER_HOST_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Run CI
        run: dapper ci
      
      - name: Run e2e
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          dapper e2e-sonobuoy
          dapper e2e-verify

      - name: Generate artifact checksums
        run: find dist/artifacts -type f -exec sha256sum {} \; > "dist/artifacts/sha256sum-${{ matrix.arch }}.txt"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "artifacts-${{ matrix.os }}-${{ matrix.arch }}"
          path: dist/artifacts/*
          if-no-files-found: error
          overwrite: true

  # Create a GitHub release using artifacts from the `build-test` job.
  create-gh-release:
    runs-on: ubuntu-latest
    needs: 
      - build-test
    permissions:
      contents: write # needed for creating the GH release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/artifacts
          pattern: artifacts-*
          merge-multiple: true

      - name: Create GitHub release
        run: gh release create "${{ env.TAG }}" --prerelease --title "${{ env.TAG }}" dist/artifacts/*

  # Build Docker images using artifacts from the `build-test` job and push them 
  # to DockerHub.
  build-push-images:
    runs-on: ubuntu-latest
    needs: 
      - build-test
    permissions:
      contents: read
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: latest=false

      - name: Fix the not-a-git-repository issue
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/artifacts
          pattern: artifacts-*
          merge-multiple: true

      - name: Debug
        run: |
          ls -lah dist/artifacts
          echo "$ARCH"

      - name: Build and push controller image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: package/Dockerfile
          target: controller
          build-args: |
            ARCH=${{ matrix.arch }}
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          labels: "${{ steps.meta.outputs.labels }}"

      - name: Build and push e2e-tests image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: package/Dockerfile
          target: e2e-tests
          build-args: |
            ARCH=${{ matrix.arch }}
            TAG=${{ env.TAG }}
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          labels: "${{ steps.meta.outputs.labels }}"
